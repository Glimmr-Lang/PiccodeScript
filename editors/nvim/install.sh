#!/usr/bin/env bash

set -Eeuo pipefail

VERSION=1.0
EDITOR=NeoVim

SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)


dist=nvim
NVIM_CONFIG_DIR="$HOME/.$dist"

PACKAGE_INIT_STMT="\n-- auto-generated by \`install.sh\`\nrequire('pics').setup()"


log() {
    printf "[INFO] %s\n" "$1"
}

splash() {
    log "                        "
    log "▄▖▘       ▌  ▄▖    ▘  ▗ "
    log "▙▌▌▛▘▛▘▛▌▛▌█▌▚ ▛▘▛▘▌▛▌▜▘"
    log "▌ ▌▙▖▙▖▙▌▙▌▙▖▄▌▙▖▌ ▌▙▌▐▖"
    log "                    ▌   "
    log "                        "
    log "          $VERSION      "
    log "                        "
    log "         =====          "
    log "       BUILD AND        "
    log "   INSTALLATION SCRIPT  "
    log "          FOR           "
    log "         $EDITOR        "
    log "         =====          "
    log "                        "
    log "   (c) Hexaredecimal    "
    log "                        "
}


checkConfig() {
    log "Seaching for $dist config folder"
    if [[ -d "$HOME/.config/$dist" ]]; then
        NVIM_CONFIG_DIR="$HOME/.config/$dist"
    elif [[ -d "$HOME/.$dist" ]]; then
        NVIM_CONFIG_DIR="$HOME/.$dist"
    else
        log "Error: Unable to find NeoVim configuration path in $HOME!"
        xyzzzz # Cause an error
    fi
}


install() {
    log "Installation started"
    log "Copying files to $NVIM_CONFIG_DIR"
    mkdir -p $NVIM_CONFIG_DIR/lua
    mkdir -p $NVIM_CONFIG_DIR/syntax
    cp pics.lua $NVIM_CONFIG_DIR/lua/
    cp -r syntax/* $NVIM_CONFIG_DIR/syntax
    log "Installation done"
}


appendToConfig() {
    if grep -q "require('pics')" "$NVIM_CONFIG_DIR/init.lua" || grep -q "require(\"pics\")" "$NVIM_CONFIG_DIR/init.lua"; then
        log "Plugin already activated"
    else
        log "Activating the plugin"
        echo -e $PACKAGE_INIT_STMT >>$NVIM_CONFIG_DIR/init.lua
    fi
}

checkIfAppended() {
    if ! [[ -f "$NVIM_CONFIG_DIR/init.lua" ]]; then
        log "Error: Unable to find init.lua in $NVIM_CONFIG_DIR."
        log "please paste the following lua code into your configuratgion files in order to activate the pics package:"
        log "    $PACKAGE_INIT_STMT"
    else
        appendToConfig
    fi
}


finalMessage() {
    log ""
    log "Thank you for installing the piccodescript mode for $EDITOR"
}


handle_error() {
    log "Something went wrong"
    log "Aborting"
}

trap handle_error ERR

main() {
  splash
  checkConfig
  install
  checkIfAppended
  finalMessage
}

main


