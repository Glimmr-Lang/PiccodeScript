
// Module: Number
// Functions specific to the *Number* type
Number :: module {

  // Function: isZero
  // Checks if the given number is zero
  //
  // Parameters:
  //   n - The number to check
  //
  // Returns:
  //   A boolean value telling whether `n` is zero or not
  isZero :: (n=0) = n == 0


  // Function: isPositive
  // Checks if the given number is a positive number
  //
  // Parameters:
  //   n - The number to check
  //
  // Returns:
  //   A boolean value telling whether `n` is positive or not
  isPositive :: (n=0) = n > 0


  // Function: isNegative
  // Checks if the given number is a negative number
  //
  // Parameters:
  //   n - The number to check
  //
  // Returns:
  //   A boolean value telling whether `n` is negative or not
  isNegative :: (n=0) = n < 0


  // Function: isEven
  // Checks if the given number is an even number
  //
  // Parameters:
  //   n - The number to check
  //
  // Returns:
  //   A boolean value telling whether `n` is even or not
  isEven :: (n=0) = (n % 2) == 0


  // Function: isOdd
  // Checks if the given number is an odd number
  //
  // Parameters:
  //   n - The number to check
  //
  // Returns:
  //   A boolean value telling whether `n` is odd or not
  isOdd :: (n=0) = (n % 2) != 0


  // Function: toString
  // Converts the given number to a string representation
  //
  // Parameters:
  //   n - The number to convert
  //
  // Returns:
  //   A string representation of the number `n`
  toString :: (n=0) = String.from(n)


  // Function: abs
  // Returns the absolute value of a number
  //
  // Parameters:
  //   n - The number to get absolute value of
  //
  // Returns:
  //   The absolute value of the number `n`
  abs :: (n=0) = if n < 0 then -n else n


  // Function: sign
  // Returns the sign of a number
  //
  // Parameters:
  //   n - The number to check
  //
  // Returns:
  //   1 if the number is positive,
  //   -1 if the number is negative,
  //   0 if the number is zero
  sign :: (n=0) = 
    if n > 0 do { 1 }
    else do { 
			if n < 0 do { -1 }
    	else do { 0 }
		}

}

